# IGW: internet gateway
admin:
  address:
    socket_address:
      protocol: TCP
      address: 127.0.0.1
      port_value: 9909

static_resources:
  listeners:
#- name: transparent_proxy_terminate_connect
#  address:
#    socket_address:
#      address: 0.0.0.0
#      port_value: 11000 
#  filter_chains:
#  - filters:
#    - name: envoy.filters.network.http_connection_manager
#      typed_config:
#        "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
#        #codec_type: AUTO
#        #forward_client_cert_details: SANITIZE_SET
#        #set_current_client_cert_details:
#        #  subject: true
#        #  cert: true
#        #  chain: true
#        #  dns: true
#        #  uri: true
#        stat_prefix: ingress_http
#        route_config:
#          name: local_route
#          virtual_hosts:
#          - name: local_service
#            domains: ["*"]
#            routes:
#              - match:
#                  connect_matcher:
#                    {}
#                route:
#                  cluster: tcp_forward_cluster
#                  upgrade_configs:
#                    - upgrade_type: CONNECT
#                      connect_config:
#                        {}
#        http_filters:
#        - name: envoy.filters.http.lua
#          typed_config:
#            "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
#            default_source_code: 
#              inline_string: "-- Called on the request path.\nfunction envoy_on_request(request_handle)\n  local service_name = request_handle:headers():get(\"service_name\")\n  request_handle:streamInfo():dynamicMetadata():set(\"envoy.filters.http.lua\", \"service_name\", service_name)\nend\n      \n"
#        #- name: envoy.filters.http.rbacTransparentProxy
#        #  typed_config: 
#        #    "@type": type.googleapis.com/envoy.extensions.filters.http.rbac.v3.RBAC
#        #    rules:
#        #      action: ALLOW
#        #      policies:
#        #        "allow_curl_to_google":
#        #          permissions:
#        #            header:
#        #              name: ":authority"
#        #              string_match:
#        #                safe_regex: 
#        #                  regex: "^www\\.google\\.com(:[0-9]{1,5})?"
#        #          principals:
#        #            metadata:
#        #              filter: envoy.filters.http.lua
#        #              path: 
#        #                key: service_name
#        #              value:
#        #                list_match: 
#        #                  one_of: 
#        #                    string_match:
#        #                      exact: curl
#        #            #header: { name: "service_name", exact_match: "curl" }
#        - name: envoy.filters.http.router
#          typed_config:
#            "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
#    #transport_socket:
#    #  name: envoy.transport_sockets.tls
#    #  typed_config:
#    #    "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
#    #    require_client_certificate: true
#    #    common_tls_context:
#    #      #tls_params:
#    #      #  tls_min_version: TLSv1_2
#    #      tls_certificates:
#    #      - certificate_chain:
#    #          filename: /Users/menghan/root/ca/intermediate/certs/envoy.cert.pem
#    #        private_key:
#    #          filename: /Users/menghan/root/ca/intermediate/private/envoy.key.pem
#    #        password:
#    #          inline_string: "envoy"
#    #      validation_context:
#    #        trusted_ca:
#    #          filename: /Users/menghan/root/ca/intermediate/certs/ca-chain.cert.pem
#        http2_protocol_options:
#          allow_connect: true
#        upgrade_configs:
#        - upgrade_type: CONNECT
#  listener_filters:
#  - name: envoy.filters.listener.proxy_protocol
#    typed_config:
#      "@type": type.googleapis.com/envoy.extensions.filters.listener.proxy_protocol.v3.ProxyProtocol
#- name: transparent_proxy_tcp_forward_listener
#  address:
#    socket_address:
#      address: 0.0.0.0
#      port_value: 11002
#  filter_chains:
#  - filters:
#    - name: envoy.tcp_proxy
#      typed_config:
#        "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
#        cluster: original_dst_cluster
#        stat_prefix: tcp
#  listener_filters:
#  - name: envoy.filters.listener.proxy_protocol
#    typed_config:
#      "@type": type.googleapis.com/envoy.extensions.filters.listener.proxy_protocol.v3.ProxyProtocol
#  - name: envoy.filters.listener.tls_inspector
#    typed_config:
#      "@type": type.googleapis.com/envoy.extensions.filters.listener.tls_inspector.v3.TlsInspector
  - name: transparent_proxy_plain_text_http_listener
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 11003
    filter_chains:
      filters:
      - name: envoy.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: transparent_proxy_plain_text_http_listener
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match:
                  prefix: "/"
                route:
                  cluster: dynamic_transparent_proxy_cluster_plain_text_http
            request_headers_to_remove: 
              - x-igw-service-name
          http_filters:
          #- name: envoy.filters.http.lua
          #  typed_config:
          #    "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
          #    default_source_code:
          #      inline_string: "-- Called on the request path.\nfunction envoy_on_request(request_handle)\n  local service_name = request_handle:headers():get(\"x-igw-service-name\")\n  request_handle:streamInfo():dynamicMetadata():set(\"envoy.filters.http.lua\", \"service_name\", service_name)\nend\n      \n"
          #- name: envoy.filters.http.rbacTransparentProxyPlainText
          - name: envoy.filters.http.dynamic_forward_proxy
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.dynamic_forward_proxy.v3.FilterConfig
              dns_cache_config:
                name: dynamic_forward_proxy_plain_text_http_cache_config
                dns_lookup_family: V4_ONLY
                typed_dns_resolver_config:
                  name: envoy.network.dns_resolver.cares
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.network.dns_resolver.cares.v3.CaresDnsResolverConfig
                    resolvers:
                    - socket_address:
                        address: "8.8.8.8"
                        port_value: 53
                    dns_resolver_options:
                      use_tcp_for_dns_lookups: true
                      no_default_search_domain: true
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
              #suppress_envoy_headers: true


  clusters:
#- name: tcp_forward_cluster
#  type: LOGICAL_DNS
#  connect_timeout: 5s
#  dns_lookup_family: V4_ONLY
#  transport_socket:
#    name: envoy.transport_sockets.upstream_proxy_protocol
#    typed_config:
#      "@type": type.googleapis.com/envoy.extensions.transport_sockets.proxy_protocol.v3.ProxyProtocolUpstreamTransport
#      transport_socket:
#        name: envoy.transport_sockets.raw_buffer
#        typed_config:
#          "@type": type.googleapis.com/envoy.extensions.transport_sockets.raw_buffer.v3.RawBuffer
#  load_assignment:
#    cluster_name: forward_proxy
#    endpoints:
#    - lb_endpoints:
#      - endpoint:
#          address:
#            socket_address: 
#              address: localhost
#              port_value: 11002
#
#- name: original_dst_cluster
#  type: ORIGINAL_DST
#  connect_timeout: 5s
#  dns_lookup_family: V4_ONLY
#  lb_policy: CLUSTER_PROVIDED
#  circuit_breakers:
#    thresholds:
#    - max_connections: 5000
#      max_pending_requests: 5000
#      max_requests: 5000
#      max_retries: 3
#      track_remaining: true
#    - priority: HIGH
#      max_connections: 5000
#      max_pending_requests: 5000
#      max_requests: 5000
#      max_retries: 3
#      track_remaining: true

  - name: dynamic_transparent_proxy_cluster_plain_text_http
    #connect_timeout: 5s
    lb_policy: CLUSTER_PROVIDED
    #circuit_breakers:
    #  thresholds:
    #  - max_connections: 5000
    #    max_pending_requests: 5000
    #    max_requests: 5000
    #    max_retries: 3
    #    track_remaining: true
    #  - priority: HIGH
    #    max_connections: 5000
    #    max_pending_requests: 5000
    #    max_requests: 5000
    #    max_retries: 3
    #    track_remaining: true
    cluster_type:
      name: envoy.clusters.dynamic_forward_proxy
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.clusters.dynamic_forward_proxy.v3.ClusterConfig
        dns_cache_config:
          name: dynamic_forward_proxy_cache_config
          dns_lookup_family: V4_ONLY
          typed_dns_resolver_config:
            name: envoy.network.dns_resolver.cares
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.network.dns_resolver.cares.v3.CaresDnsResolverConfig
              resolvers:
              - socket_address:
                  address: "8.8.8.8"
                  port_value: 53
              dns_resolver_options:
                use_tcp_for_dns_lookups: true
                no_default_search_domain: true
