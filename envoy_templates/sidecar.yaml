#
# Service A: simulation of a service in a service mesh. It serves as the downstream service in the POC.
#
admin:
  address:
    socket_address: { address: 127.0.0.1, port_value: 9902 }

static_resources:
  listeners:
  - name: listener_to_upstream
    address:
      socket_address: { address: 127.0.0.1, port_value: 10000 }
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          codec_type: AUTO
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match: { prefix: "/" }
                route: { cluster: upstream_service }
          http_filters:
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
  - name: listener_to_egress
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 10002
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          route_config:
            name: remote_route
            virtual_hosts:
            - name: remote_service
              domains: ["*"]
              routes:
              - match: { prefix: "/" }
                route: { cluster: igw }
          http_filters:
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
  - name: listener_to_egress_https
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 10004
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          route_config:
            name: remote_route
            virtual_hosts:
            - name: remote_service
              domains: ["*"]
              routes:
              - match: { prefix: "/" }
                route: { cluster: igwhttps }
          http_filters:
          - name: envoy.filters.http.router
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
  # TODO: still broken after CONNECT
  # https_proxy=https://localhost:10006 curl -vvv https://www.google.com
  # * CONNECT phase completed
  # CONNECT tunnel established, response 200
  # ALPN: curl offers h2,http/1.1
  # (304) (OUT), TLS handshake, Client hello (1):
  # LibreSSL/3.3.6: error:1404B42E:SSL routines:ST_CONNECT:tlsv1 alert protocol version
  # Closing connection
  # curl: (35) LibreSSL/3.3.6: error:1404B42E:SSL routines:ST_CONNECT:tlsv1 alert protocol version
  - name: listener_to_igw
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 10006
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          codec_type: AUTO
          stat_prefix: ingress_https
          route_config:
            name: local_route_https
            virtual_hosts:
            - name: local_service_https
              domains: ["*"]
              routes:
                - match:
                    connect_matcher:
                      {}
                  route:
                    cluster: igwhttps
                    upgrade_configs:
                      - upgrade_type: CONNECT
                        connect_config:
                          {}
                - match: { prefix: "/" }
                  route: { cluster: igwhttps }
                  #direct_response:
                  #  status: 200
                  #  body:
                  #    inline_string: "THIS IS A TEST"
          http_filters:
            #- name: envoy.filters.http.dynamic_forward_proxy
            #  typed_config:
            #    "@type": type.googleapis.com/envoy.extensions.filters.http.dynamic_forward_proxy.v3.FilterConfig
            #    dns_cache_config:
            #      name: dynamic_forward_proxy_cache_config
            #      dns_lookup_family: V4_ONLY
            #      typed_dns_resolver_config:
            #        name: envoy.network.dns_resolver.cares
            #        typed_config:
            #          "@type": type.googleapis.com/envoy.extensions.network.dns_resolver.cares.v3.CaresDnsResolverConfig
            #          resolvers:
            #          - socket_address:
            #              address: "8.8.8.8"
            #              port_value: 53
            #          dns_resolver_options:
            #            use_tcp_for_dns_lookups: true
            #            no_default_search_domain: true     
            - name: envoy.filters.http.router
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          common_tls_context:
            tls_params:
              tls_minimum_protocol_version: TLSv1_2
            tls_certificates:
            - certificate_chain:
                filename: /Users/menghan/root/ca/intermediate/certs/envoy.cert.pem
              private_key:
                filename: /Users/menghan/root/ca/intermediate/private/envoy.key.pem
              password:
                inline_string: "envoy"
            validation_context:
              trusted_ca:
                filename: /Users/menghan/root/ca/intermediate/certs/ca-chain.cert.pem
  clusters:
  - name: upstream_service
    connect_timeout: 0.25s
    type: STATIC
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: upstream_service
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 127.0.0.1
                port_value: 10001
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        common_tls_context:
          tls_certificates:
          - certificate_chain:
              filename: /Users/menghan/root/ca/intermediate/certs/localcurl.cert.pem
            private_key:
              filename: /Users/menghan/root/ca/intermediate/private/localcurl.key.pem
            password:
              inline_string: "envoy"
          validation_context:
              trusted_ca:
                filename: /Users/menghan/root/ca/intermediate/certs/ca-chain.cert.pem
  - name: igw
    connect_timeout: 0.25s
    type: STATIC
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: igw
      endpoints:
        - lb_endpoints:
          - endpoint:
              address:
                socket_address:
                  address: 127.0.0.1  # You can replace this with any public internet service
                  port_value: 8181
  - name: igwhttps
    connect_timeout: 0.25s
    type: STATIC
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: igw
      endpoints:
        - lb_endpoints:
          - endpoint:
              address:
                socket_address:
                  address: 127.0.0.1  # You can replace this with any public internet service
                  port_value: 8183
    transport_socket:
      name: envoy.transport_sockets.tls
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
        common_tls_context:
          alpn_protocols: ["h2", "http/1.1"]
          tls_params:
            tls_minimum_protocol_version: TLSv1_2
          tls_certificates:
          - certificate_chain:
              filename: /Users/menghan/root/ca/intermediate/certs/localcurl.cert.pem
            private_key:
              filename: /Users/menghan/root/ca/intermediate/private/localcurl.key.pem
            password:
              inline_string: "envoy"
          validation_context:
              trusted_ca:
                filename: /Users/menghan/root/ca/intermediate/certs/ca-chain.cert.pem
  - name: dynamic_forward_proxy_cluster
    lb_policy: CLUSTER_PROVIDED
    cluster_type:
      name: envoy.clusters.dynamic_forward_proxy
      typed_config:
        "@type": type.googleapis.com/envoy.extensions.clusters.dynamic_forward_proxy.v3.ClusterConfig
        dns_cache_config:
          name: dynamic_forward_proxy_cache_config
          dns_lookup_family: V4_ONLY
          typed_dns_resolver_config:
            name: envoy.network.dns_resolver.cares
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.network.dns_resolver.cares.v3.CaresDnsResolverConfig
              resolvers:
              - socket_address:
                  address: "8.8.8.8"
                  port_value: 53
              dns_resolver_options:
                use_tcp_for_dns_lookups: true
                no_default_search_domain: true
